@model List<dynamic>

@{
    ViewData["Title"] = "User List";
    var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
}

<h2 class="text-center mb-5">@ViewData["Title"]</h2>

@if (ViewData["Message"] != null)
{
    <div class="alert alert-danger">@ViewData["Message"]</div>
}

@if (Model != null && Model.Count > 0)
{
    <div class="overflow-x-auto bg-white shadow-md rounded-lg">
        <table class="table">
            <thead>
                <tr>
                    <th>User ID</th>
                    <th>User Name</th>
                    <th>Amount of Money</th>
                    <th>Role</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.UserId</td>
                        <td>@user.UserName</td>
                        <td>
                            @if (user.AmountOfMoney == null)
                            {
                                <span>N/A</span>
                            }
                            else
                            {
                                <span>@string.Format("{0:C}", user.AmountOfMoney)</span>
                            }
                        </td>
                        <td>@user.RoleName</td>
                        <td>
                            @if (user.UserId == currentUserId)
                            {
                                <button class="btn btn-danger btn-sm" disabled title="You cannot delete your own account">Delete</button>
                            }
                            else
                            {
                                <button class="btn btn-danger btn-sm" onclick="confirmDelete('@user.UserId')">Delete</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>No users found.</p>
}


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script type="text/javascript">
        function confirmDelete(userId) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "Cancel",
                customClass: {
                    confirmButton: 'btn btn-primary me-2',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Admin")/' + userId,
                        type: 'POST',
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Deleted!',
                                    text: 'The user and all associated data have been deleted.',
                                    icon: 'success',
                                    customClass: {
                                        confirmButton: 'btn btn-primary'
                                    },
                                    buttonsStyling: false
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error!',
                                    text: response.message,
                                    icon: 'error',
                                    customClass: {
                                        confirmButton: 'btn btn-primary'
                                    },
                                    buttonsStyling: false
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            Swal.fire({
                                title: 'Error!',
                                text: 'Something went wrong.',
                                icon: 'error',
                                customClass: {
                                    confirmButton: 'btn btn-primary'
                                },
                                buttonsStyling: false
                            });
                        }
                    });
                }
            });
        }
    </script>
}